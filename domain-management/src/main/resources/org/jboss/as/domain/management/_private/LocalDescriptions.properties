core.management=The management services used to control a server or a host's host controller.
core.management.access=Model representation for configuration affecting access control and auditing of access.
core.management.security-realm=A security realm that can be associated with a management interface and used to control access to the management services.
core.management.ldap-connection=A connection factory that can be used by a security realm to access an LDAP server as a source of authentication and authorization information.
core.management.management-interface=Interfaces exposed by the management services to allow external callers to perform management tasks.

core.access-control=The access control definitions defining the access management restrictions.
core.access-control.provider=The provider to use for management access control decisions.
core.access-control.constraint=Access constraints for the vault expressions sensitivity, sensitivity classifications and the application resources.
core.access-control.constraint.application-type=TODO
core.access-control.constraint.application-type.application-type=TODO

core.access-constraint.application-type=The application type constraints.
core.access-constraint.vault-expression=Sensitivity classification of vault expressions.
core.access-control.constraint.sensitivity-classification=The sensitivity classification constraints.
core.access-control.constraint.sensitivity-classification.sensitivity-classification=The sensitivity classification constraints.
core.access-control.constraint.application-type=Configuration of the application type constraints.
core.access-control.constraint.application-type.type=The named application constraints grouped by the constraint's subsystem, or 'core' if it comes from the core model.
core.access-control.constraint.application-type-config=Configuration of an application type constraint.
core.access-control.constraint.application-type-config.configured-application=Set to override the default as to whether the constraint is considered an application resource.
core.access-control.constraint.application-type-config.default-application=Whether targets having this application type constraint are considered application resources.
core.access-control.constraint.sensitivity-classification=Configuration of the sensitivity classifications.
core.access-control.constraint.sensitivity-classification.type=The named sensitivity classifications grouped by the classification's subsystem, or 'core' if it comes from the core model.
core.access-control.constraint.sensitivity-classification-config=Configuration of a sensitivity constraint.
core.access-control.constraint.sensitivity-classification-config.configured-requires-access=Set to override the default as to whether the visibility of attributes annotated with this sensitivity constraint should be considered sensitive.
core.access-control.constraint.sensitivity-classification-config.configured-requires-read=Set to override the default as to whether reading attributes annotated with this sensitivity constraint should be considered sensitive.
core.access-control.constraint.sensitivity-classification-config.configured-requires-write=Set to override the default as to whether writing attributes annotated with this sensitivity constraint should be considered sensitive.
core.access-control.constraint.sensitivity-classification-config.default-requires-access=Whether the visibility of attributes annotated with this sensitivity constraint should be considered sensitive.
core.access-control.constraint.sensitivity-classification-config.default-requires-read=Whether reading attributes annotated with this sensitivity constraint should be considered sensitive.
core.access-control.constraint.sensitivity-classification-config.default-requires-write=Whether writing attributes annotated with this sensitivity constraint should be considered sensitive.
core.access-control.constraint.vault-expression-sensitivity=Configuration of whether vault expressions should be considered sensitive.
core.access-control.constraint.vault-expression-sensitivity.configured-requires-access=Set to override the default as to whether the visibility of attributes containing vault expressions should be considered sensitive.
core.access-control.constraint.vault-expression-sensitivity.configured-requires-read=Set to override the default as to whether reading attributes containing vault expressions should be considered sensitive.
core.access-control.constraint.vault-expression-sensitivity.configured-requires-write=Set to override the default as to whether writing attributes containing vault expressions should be considered sensitive.
core.access-control.constraint.vault-expression-sensitivity.default-requires-access=Whether the visibility of attributes containing vault expressions should be considered sensitive.
core.access-control.constraint.vault-expression-sensitivity.default-requires-read=Whether reading attributes containing vault expressions should be considered sensitive.
core.access-control.constraint.vault-expression-sensitivity.default-requires-write=Whether writing attributes containing vault expressions should be considered sensitive.

core.access-control.host-scoped-roles=Domain-wide host scoped roles to which this host should be added as a valid host
core.access-control.host-scoped-roles.role=A host scoped roles to which this host should be added as a valid host

core.access-control.server-group-scoped-role=Administrative roles that are based on standard roles but are constrained to a particular set of managed domain server groups
core.access-control.server-group-scoped-role.base-role=The standard role upon which the server-group-scoped-role is based
core.access-control.server-group-scoped-role.server-groups=The list of names server groups to which this users in this role are constrained
core.access-control.server-group-scoped-role.server-groups.server-group=A server group to which the user in this role is constrained
core.access-control.server-group-scoped-role.add=Adds a new server-group-scoped-role
core.access-control.server-group-scoped-role.remove=Removes a server-group-scoped-role

core.access-control.host-scoped-role=Administrative roles that are based on standard roles but are constrained to a particular set of managed domain hosts
core.access-control.host-scoped-role.base-role=The standard role upon which the host-scoped-role is based
core.access-control.host-scoped-role.hosts=The list of names hosts to which this users in this role are constrained
core.access-control.host-scoped-role.hosts.host=A host to which the user in this role is constrained
core.access-control.host-scoped-role.add=Adds a new host-scoped-role
core.access-control.host-scoped-role.remove=Removes a host-scoped-role

core.access-control.use-realm-roles=Set to enable the use of roles assigned by the security realms in access control decisions.
core.access-control.role-mapping=A mapping of users and groups to a specific role.
core.access-control.role-mapping.add=Add a new role mapping defintion.
core.access-control.role-mapping.remove=Remove an existing role mapping definition.
core.access-control.role-mapping.exclude=Principals to be excluded from a role.
core.access-control.role-mapping.include=Principals to be inlcuded in a role.

core.access-control.role-mapping.principal=An individual principal used within a role mapping.
core.access-control.role-mapping.principal.add=Add a new principal to role mapping.
core.access-control.role-mapping.principal.remove=Remove an existing principal to role mapping.
core.access-control.role-mapping.principal.type=The type of the Principal being mapped, either 'group' or 'user'.
core.access-control.role-mapping.principal.realm=An optional attribute to map based on the realm used for authentication.
core.access-control.role-mapping.principal.name=The name of the user or group being mapped.

